var _user$project$Commands$httpDelete = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'DELETE',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Commands$httpPut = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'PUT',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Commands$deleteBrand = function (brandId) {
	var body = _elm_lang$http$Http$emptyBody;
	var apiUrl = A2(
		_elm_lang$core$Basics_ops['++'],
		'/api/brands/',
		_elm_lang$core$Basics$toString(brandId));
	var request = A3(_user$project$Commands$httpDelete, apiUrl, body, _user$project$Decoders$brandDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$DeleteBrand, request);
};
var _user$project$Commands$deleteType = function (typeId) {
	var body = _elm_lang$http$Http$emptyBody;
	var apiUrl = A2(
		_elm_lang$core$Basics_ops['++'],
		'/api/types/',
		_elm_lang$core$Basics$toString(typeId));
	var request = A3(_user$project$Commands$httpDelete, apiUrl, body, _user$project$Decoders$typeDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$DeleteType, request);
};
var _user$project$Commands$updateBrand = function (editedBrand) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Encoders$brandEncoder(editedBrand));
	var apiUrl = A2(
		_elm_lang$core$Basics_ops['++'],
		'/api/brands/',
		_elm_lang$core$Basics$toString(editedBrand.id));
	var request = A3(_user$project$Commands$httpPut, apiUrl, body, _user$project$Decoders$brandDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$UpdateBrand, request);
};
var _user$project$Commands$updateType = function (editedType) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Encoders$typeEncoder(editedType));
	var apiUrl = A2(
		_elm_lang$core$Basics_ops['++'],
		'/api/types/',
		_elm_lang$core$Basics$toString(editedType.id));
	var request = A3(_user$project$Commands$httpPut, apiUrl, body, _user$project$Decoders$typeDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$UpdateType, request);
};
var _user$project$Commands$createProduct = function (newProduct) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Encoders$productEncoder(newProduct));
	var apiUrl = '/api/products';
	var request = A3(_elm_lang$http$Http$post, apiUrl, body, _user$project$Decoders$productDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$CreateProduct, request);
};
var _user$project$Commands$createBrand = function (newBrand) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Encoders$brandEncoder(newBrand));
	var apiUrl = '/api/brands';
	var request = A3(_elm_lang$http$Http$post, apiUrl, body, _user$project$Decoders$brandDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$CreateBrand, request);
};
var _user$project$Commands$createType = function (newType) {
	var body = _elm_lang$http$Http$jsonBody(
		_user$project$Encoders$typeEncoder(newType));
	var apiUrl = '/api/types';
	var request = A3(_elm_lang$http$Http$post, apiUrl, body, _user$project$Decoders$typeDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$CreateType, request);
};
var _user$project$Commands$fetchProducts = function () {
	var apiUrl = '/api/products';
	var request = A2(_elm_lang$http$Http$get, apiUrl, _user$project$Decoders$productListDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$FetchProduct, request);
}();
var _user$project$Commands$fetchBrands = function () {
	var apiUrl = '/api/brands';
	var request = A2(_elm_lang$http$Http$get, apiUrl, _user$project$Decoders$brandListDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$FetchBrand, request);
}();
var _user$project$Commands$fetchTypes = function () {
	var apiUrl = '/api/types';
	var request = A2(_elm_lang$http$Http$get, apiUrl, _user$project$Decoders$typeListDecoder);
	return A2(_elm_lang$http$Http$send, _user$project$Messages$FetchType, request);
}();
