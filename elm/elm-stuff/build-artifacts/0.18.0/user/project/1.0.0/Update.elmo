var _user$project$Update$updateTypeList = F2(
	function (model, newType) {
		var _p0 = model.typeList;
		if (_p0.ctor === 'Success') {
			var _p1 = _p0._0;
			var oldTypes = _p1.types;
			var newTypes = A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				{ctor: '::', _0: newType, _1: oldTypes});
			var newTypeList = _elm_lang$core$Native_Utils.update(
				_p1,
				{types: newTypes});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						typeList: _user$project$Model$Success(newTypeList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$urlUpdate = function (model) {
	var _p2 = model.route;
	switch (_p2.ctor) {
		case 'HomeIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		case 'TypeIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{
					ctor: '::',
					_0: _user$project$Commands$fetchTypes,
					_1: {ctor: '[]'}
				});
		case 'BrandIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{
					ctor: '::',
					_0: _user$project$Commands$fetchBrands,
					_1: {ctor: '[]'}
				});
		default:
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
	}
};
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'FetchType':
				if (_p3._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								typeList: _user$project$Model$Success(_p3._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								typeList: _user$project$Model$Failure('Something went wrong...')
							}),
						{ctor: '[]'});
				}
			case 'CreateType':
				if (_p3._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateTypeList, model, _p3._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						model,
						{ctor: '[]'});
				}
			case 'SetTypeName':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{typeName: _p3._0}),
					{ctor: '[]'});
			case 'ClickSaveType':
				var newType = {id: 0, name: model.typeName};
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{typeName: ''}),
					{
						ctor: '::',
						_0: _user$project$Commands$createType(newType),
						_1: {ctor: '[]'}
					});
			case 'FetchBrand':
				if (_p3._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								brandList: _user$project$Model$Success(_p3._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{
								brandList: _user$project$Model$Failure('Something went wrong...')
							}),
						{ctor: '[]'});
				}
			case 'UrlChange':
				var currentRoute = _user$project$Routing$parse(_p3._0);
				return _user$project$Update$urlUpdate(
					_elm_lang$core$Native_Utils.update(
						model,
						{route: currentRoute}));
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{
						ctor: '::',
						_0: _elm_lang$navigation$Navigation$newUrl(
							_user$project$Routing$toPath(_p3._0)),
						_1: {ctor: '[]'}
					});
		}
	});
