var _user$project$Update$updateDeleteBrand = F2(
	function (model, brandDeleted) {
		var _p0 = model.brandList;
		if (_p0.ctor === 'Success') {
			var _p1 = _p0._0;
			var oldBrands = _p1.brands;
			var newBrands = A2(
				_elm_lang$core$List$filter,
				function (b) {
					return !_elm_lang$core$Native_Utils.eq(b.id, brandDeleted.id);
				},
				oldBrands);
			var newBrandList = _elm_lang$core$Native_Utils.update(
				_p1,
				{brands: newBrands});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						brandList: _user$project$Model$Success(newBrandList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateDeleteType = F2(
	function (model, typeDeleted) {
		var _p2 = model.typeList;
		if (_p2.ctor === 'Success') {
			var _p3 = _p2._0;
			var oldTypes = _p3.types;
			var newTypes = A2(
				_elm_lang$core$List$filter,
				function (t) {
					return !_elm_lang$core$Native_Utils.eq(t.id, typeDeleted.id);
				},
				oldTypes);
			var newTypeList = _elm_lang$core$Native_Utils.update(
				_p3,
				{types: newTypes});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						typeList: _user$project$Model$Success(newTypeList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateUpdateBrand = F2(
	function (model, brandUpdated) {
		var _p4 = model.brandList;
		if (_p4.ctor === 'Success') {
			var _p5 = _p4._0;
			var oldBrands = _p5.brands;
			var newBrands = A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				A2(
					_elm_lang$core$List$map,
					function (b) {
						return _elm_lang$core$Native_Utils.eq(b.id, brandUpdated.id) ? _elm_lang$core$Native_Utils.update(
							b,
							{name: brandUpdated.name}) : b;
					},
					oldBrands));
			var newBrandList = _elm_lang$core$Native_Utils.update(
				_p5,
				{brands: newBrands});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						brandList: _user$project$Model$Success(newBrandList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateUpdateType = F2(
	function (model, typeUpdated) {
		var _p6 = model.typeList;
		if (_p6.ctor === 'Success') {
			var _p7 = _p6._0;
			var oldTypes = _p7.types;
			var newTypes = A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				A2(
					_elm_lang$core$List$map,
					function (t) {
						return _elm_lang$core$Native_Utils.eq(t.id, typeUpdated.id) ? _elm_lang$core$Native_Utils.update(
							t,
							{name: typeUpdated.name}) : t;
					},
					oldTypes));
			var newTypeList = _elm_lang$core$Native_Utils.update(
				_p7,
				{types: newTypes});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						typeList: _user$project$Model$Success(newTypeList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateCreateBrand = F2(
	function (model, brandCreated) {
		var _p8 = model.brandList;
		if (_p8.ctor === 'Success') {
			var _p9 = _p8._0;
			var oldBrands = _p9.brands;
			var newBrands = A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				{ctor: '::', _0: brandCreated, _1: oldBrands});
			var newBrandList = _elm_lang$core$Native_Utils.update(
				_p9,
				{brands: newBrands});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						brandList: _user$project$Model$Success(newBrandList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateCreateType = F2(
	function (model, typeCreated) {
		var _p10 = model.typeList;
		if (_p10.ctor === 'Success') {
			var _p11 = _p10._0;
			var oldTypes = _p11.types;
			var newTypes = A2(
				_elm_lang$core$List$sortBy,
				function (_) {
					return _.name;
				},
				{ctor: '::', _0: typeCreated, _1: oldTypes});
			var newTypeList = _elm_lang$core$Native_Utils.update(
				_p11,
				{types: newTypes});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						typeList: _user$project$Model$Success(newTypeList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateConsumeProduct = F2(
	function (model, productConsumed) {
		var _p12 = model.productList;
		if (_p12.ctor === 'Success') {
			var _p13 = _p12._0;
			var oldProducts = _p13.products;
			var filteredProducts = A2(
				_elm_lang$core$List$filter,
				function (p) {
					return !_elm_lang$core$Native_Utils.eq(
						{
							ctor: '_Tuple3',
							_0: p.productType,
							_1: p.productBrand,
							_2: _user$project$Util$toIsoString(p.expiresAt)
						},
						{
							ctor: '_Tuple3',
							_0: productConsumed.productType,
							_1: productConsumed.productBrand,
							_2: _user$project$Util$toIsoString(productConsumed.expiresAt)
						});
				},
				oldProducts);
			var newProducts = (_elm_lang$core$Native_Utils.cmp(productConsumed.count, 0) > 0) ? A2(
				_elm_lang$core$List$sortBy,
				_user$project$Util$compareProduct,
				{ctor: '::', _0: productConsumed, _1: filteredProducts}) : filteredProducts;
			var newProductList = _elm_lang$core$Native_Utils.update(
				_p13,
				{products: newProducts});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						productList: _user$project$Model$Success(newProductList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$updateCreateProduct = F2(
	function (model, productCreated) {
		var _p14 = model.productList;
		if (_p14.ctor === 'Success') {
			var _p15 = _p14._0;
			var oldProducts = _p15.products;
			var newProducts = A2(
				_elm_lang$core$List$sortBy,
				_user$project$Util$compareProduct,
				{
					ctor: '::',
					_0: productCreated,
					_1: A2(
						_elm_lang$core$List$filter,
						function (p) {
							return !_elm_lang$core$Native_Utils.eq(
								{
									ctor: '_Tuple3',
									_0: p.productType,
									_1: p.productBrand,
									_2: _user$project$Util$toIsoString(p.expiresAt)
								},
								{
									ctor: '_Tuple3',
									_0: productCreated.productType,
									_1: productCreated.productBrand,
									_2: _user$project$Util$toIsoString(productCreated.expiresAt)
								});
						},
						oldProducts)
				});
			var newProductList = _elm_lang$core$Native_Utils.update(
				_p15,
				{products: newProducts});
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{
						productList: _user$project$Model$Success(newProductList)
					}),
				{ctor: '[]'});
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		}
	});
var _user$project$Update$saveBrand = function (model) {
	var _p16 = model.brandId;
	if (_p16.ctor === 'Just') {
		var editedBrand = {id: _p16._0, name: model.brandName};
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{brandName: '', brandId: _elm_lang$core$Maybe$Nothing}),
			{
				ctor: '::',
				_0: _user$project$Commands$updateBrand(editedBrand),
				_1: {ctor: '[]'}
			});
	} else {
		var newBrand = {id: 0, name: model.brandName};
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{brandName: ''}),
			{
				ctor: '::',
				_0: _user$project$Commands$createBrand(newBrand),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Update$saveType = function (model) {
	var _p17 = model.typeId;
	if (_p17.ctor === 'Just') {
		var editedType = {id: _p17._0, name: model.typeName};
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{typeName: '', typeId: _elm_lang$core$Maybe$Nothing}),
			{
				ctor: '::',
				_0: _user$project$Commands$updateType(editedType),
				_1: {ctor: '[]'}
			});
	} else {
		var newType = {id: 0, name: model.typeName};
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_elm_lang$core$Native_Utils.update(
				model,
				{typeName: ''}),
			{
				ctor: '::',
				_0: _user$project$Commands$createType(newType),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Update$saveProduct = function (_p18) {
	var _p19 = _p18;
	var _p21 = _p19;
	var _p20 = {ctor: '_Tuple3', _0: _p19.productTypeId, _1: _p19.productBrandId, _2: _p19.productExpiresAt};
	if ((((_p20.ctor === '_Tuple3') && (_p20._0.ctor === 'Just')) && (_p20._1.ctor === 'Just')) && (_p20._2.ctor === 'Just')) {
		var newProduct = {
			typeId: _p20._0._0,
			brandId: _p20._1._0,
			expiresAt: _user$project$Util$toIsoString(_p20._2._0)
		};
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_p21,
			{
				ctor: '::',
				_0: _user$project$Commands$createProduct(newProduct),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			_p21,
			{ctor: '[]'});
	}
};
var _user$project$Update$urlUpdate = function (model) {
	var _p22 = model.route;
	switch (_p22.ctor) {
		case 'HomeIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
		case 'TypeIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{
					ctor: '::',
					_0: _user$project$Commands$fetchTypes,
					_1: {ctor: '[]'}
				});
		case 'BrandIndexRoute':
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{
					ctor: '::',
					_0: _user$project$Commands$fetchBrands,
					_1: {ctor: '[]'}
				});
		case 'ProductIndexRoute':
			var _p23 = _elm_community$elm_datepicker$DatePicker$init;
			var datePicker = _p23._0;
			var datePickerFx = _p23._1;
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Messages$ToDatePicker, datePickerFx),
					_1: {
						ctor: '::',
						_0: _user$project$Commands$fetchTypes,
						_1: {
							ctor: '::',
							_0: _user$project$Commands$fetchBrands,
							_1: {
								ctor: '::',
								_0: _user$project$Commands$fetchProducts,
								_1: {ctor: '[]'}
							}
						}
					}
				});
		default:
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				{ctor: '[]'});
	}
};
var _user$project$Update$update = F2(
	function (msg, _p24) {
		var _p25 = _p24;
		var _p33 = _p25;
		var _p26 = msg;
		switch (_p26.ctor) {
			case 'FetchType':
				if (_p26._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								typeList: _user$project$Model$Success(_p26._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								typeList: _user$project$Model$Failure('Something went wrong...')
							}),
						{ctor: '[]'});
				}
			case 'CreateType':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateCreateType, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'UpdateType':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateUpdateType, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'DeleteType':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateDeleteType, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'SetTypeName':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p33,
						{typeName: _p26._0}),
					{ctor: '[]'});
			case 'ClickSaveType':
				return _user$project$Update$saveType(_p33);
			case 'ClickEditType':
				var _p27 = _p26._0;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p33,
						{
							typeName: _p27.name,
							typeId: _elm_lang$core$Maybe$Just(_p27.id)
						}),
					{ctor: '[]'});
			case 'ClickDeleteType':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_p33,
					{
						ctor: '::',
						_0: _user$project$Commands$deleteType(_p26._0),
						_1: {ctor: '[]'}
					});
			case 'FetchBrand':
				if (_p26._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								brandList: _user$project$Model$Success(_p26._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								brandList: _user$project$Model$Failure('Something went wrong...')
							}),
						{ctor: '[]'});
				}
			case 'CreateBrand':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateCreateBrand, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'UpdateBrand':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateUpdateBrand, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'DeleteBrand':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateDeleteBrand, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'SetBrandName':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p33,
						{brandName: _p26._0}),
					{ctor: '[]'});
			case 'ClickSaveBrand':
				return _user$project$Update$saveBrand(_p33);
			case 'ClickEditBrand':
				var _p28 = _p26._0;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p33,
						{
							brandName: _p28.name,
							brandId: _elm_lang$core$Maybe$Just(_p28.id)
						}),
					{ctor: '[]'});
			case 'ClickDeleteBrand':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_p33,
					{
						ctor: '::',
						_0: _user$project$Commands$deleteBrand(_p26._0),
						_1: {ctor: '[]'}
					});
			case 'FetchProduct':
				if (_p26._0.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								productList: _user$project$Model$Success(_p26._0._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								productList: _user$project$Model$Failure('Something went wrong ...')
							}),
						{ctor: '[]'});
				}
			case 'CreateProduct':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateCreateProduct, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'ConsumeProduct':
				if (_p26._0.ctor === 'Ok') {
					return A2(_user$project$Update$updateConsumeProduct, _p33, _p26._0._0);
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_p33,
						{ctor: '[]'});
				}
			case 'SetProductType':
				var result = _elm_lang$core$String$toInt(_p26._0);
				var _p29 = result;
				if (_p29.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								productTypeId: _elm_lang$core$Maybe$Just(_p29._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{productTypeId: _elm_lang$core$Maybe$Nothing}),
						{ctor: '[]'});
				}
			case 'SetProductBrand':
				var result = _elm_lang$core$String$toInt(_p26._0);
				var _p30 = result;
				if (_p30.ctor === 'Ok') {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{
								productBrandId: _elm_lang$core$Maybe$Just(_p30._0)
							}),
						{ctor: '[]'});
				} else {
					return A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							_p33,
							{productBrandId: _elm_lang$core$Maybe$Nothing}),
						{ctor: '[]'});
				}
			case 'ClickSaveProduct':
				return _user$project$Update$saveProduct(_p33);
			case 'ClickConsumeProduct':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_p33,
					{
						ctor: '::',
						_0: _user$project$Commands$consumeProduct(_p26._0),
						_1: {ctor: '[]'}
					});
			case 'ToDatePicker':
				var _p31 = A3(_elm_community$elm_datepicker$DatePicker$update, _user$project$Settings$settings, _p26._0, _p25.datePicker);
				var newDatePicker = _p31._0;
				var datePickerFx = _p31._1;
				var event = _p31._2;
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p33,
						{
							productExpiresAt: function () {
								var _p32 = event;
								if (_p32.ctor === 'Changed') {
									return _p32._0;
								} else {
									return _p33.productExpiresAt;
								}
							}(),
							datePicker: newDatePicker
						}),
					{
						ctor: '::',
						_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Messages$ToDatePicker, datePickerFx),
						_1: {ctor: '[]'}
					});
			case 'UrlChange':
				var currentRoute = _user$project$Routing$parse(_p26._0);
				return _user$project$Update$urlUpdate(
					_elm_lang$core$Native_Utils.update(
						_p33,
						{route: currentRoute}));
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_p33,
					{
						ctor: '::',
						_0: _elm_lang$navigation$Navigation$newUrl(
							_user$project$Routing$toPath(_p26._0)),
						_1: {ctor: '[]'}
					});
		}
	});
